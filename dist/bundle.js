!function(e){var t={};function o(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){"use strict";o.r(t),o.d(t,"floorBuilderMemory",(function(){return p})),o.d(t,"stage",(function(){return w})),o.d(t,"enemyStatsMemory",(function(){return v})),o.d(t,"playerStatsMemory",(function(){return b})),o.d(t,"promptControllerMemory",(function(){return k})),o.d(t,"checkThePrompt",(function(){return S})),o.d(t,"combatControllerMemory",(function(){return I})),o.d(t,"dialoguebank",(function(){return H})),o.d(t,"showDialogue",(function(){return M})),o.d(t,"useItems",(function(){return T})),o.d(t,"setMyFloor",(function(){return Y}));var n=function(){function e(e){this.stage=e}return e.prototype.getCurrentStage=function(){return this.stage},e.prototype.setCurrentStage=function(e){this.stage=e},e.prototype.increaseCurrentStage=function(){this.stage=this.stage+1},e}(),r=function(e,t,o,n,r,a,i,l,s){this.playerHealth=e,this.playerDefense=t,this.playerStrength=o,this.playerDexterity=n,this.playerDefenseDebuff=r,this.playerStrengthDebuff=a,this.playerDexterityDebuff=i,this.playerSanity=l,this.playerMorality=s},a=function(e,t,o){this.allowPrompt=e,this.waitForAttack=t,this.textSpeed=o},i=function(e,t){this.enemyAttackStrength=e,this.attackStrength=t},l=function(e,t,o,n,r,a,i,l){this.enemyHealth=e,this.enemyDefense=t,this.enemyStrength=o,this.enemyDexterity=n,this.enemyOnScreen=r,this.itemToUse=a,this.potionBackOpen=i,this.rummageOpen=l},s=function(e,t,o,n,r,a,i,l,s,u,h){this.floor=e,this.previousFloor=t,this.enemy=o,this.previousEnemy=n,this.item=r,this.previousItem=a,this.move=i,this.previousMove=l,this.enemyIsAlive=s,this.itemIsOnGround=u,this.animation=h},u=function(){this.movingQuotes=["","You are still here. ","You have descended down. ","You found a hatch down. ","You fell through a hole you found. ","You went downstairs. ","You teleported down. ","You blinked and found yourself in a new place. ","You were knocked out and woke up somewhere else. ","You woke up, was it just a nightmare? Whatever it was, you are now in an unfamiliar place. ","You tripped on a rock and rolled downhill. ","Suddenly a monster grabbed you and threw you down. ","You wish upon a star to take you away from this nightmare, but it only took you further down. ","You snap out of it. ","The worst is still in front of you. ","You feel your mind detoriating as you move further down. ","Have you seen this place before? No, can't be... ","You prey nothing else will hurt you as you go down, your prayers remain unanswered.","Hope? You forgot what this word means. "],this.movingPlace=["","You are now in a dark cave. ","You are now in a horrific dungeon. ","You are now in a deep ravine. ","You are now in damp catacombs. ","You are surrounded by graves. ","You are in deserted ruins. ","You are in a dusty stronghold. ","You are next to a dark castle. ","You are near an underground river. "],this.actions=["","You see ","You fight ","You killed ","You have spared ","You were backstabbed by ","You have been killed by ","You pick up ","You equip ","You decided to ","You also see ","You are in front of ","On the ground there is ","You look in the mirror. ","You used ","You threw ","You don't have ","The hatch to the next level is locked, you need to defeat the enemy or possess a key to proceed. ","You attacked ","You got hit! ","You are dead, GAME OVER. ","The door didn't even require a key... the monster didn't even want to fight you... You have not descended into madness, you escaped this hell, you see an open field with sunshine, a rainbow and pleasant breeze, you survived, YOU WON!"],this.enemyForm=["","a noble Knight. ","a blood-covered Vampire. ","a brave Mercenary. ","a rotting Zombie. ","an evil Demon. ","a horrific Nightmare. ","a feral Beast. ","a beautiful Elf. ","a rattling Skeleton. "],this.itemForm=["","a sharp Sword. ","a solid Shield. ","a rusty Key. ","a shiny Ring. ","a Health Potion. ","a stray Soul. ","a Sanity Potion. ","a tough set of Armor. ","a pair of spiked Gloves. ","a steel Helmet. "],this.itemUsage=["","a sharp Sword, you hope it's stronger than your previous sword. ","a solid Shield, it seems good enough to keep you alive. ","a rusty Key, looks barely sturdy enough to open something. ","a shiny Ring, you feel prettier. ","a Health Potion, you feel rejuvenated. ","a stray Soul at your enemy, the soul tore through them. ","a Sanity Potion, you feel happier. Attached to the bottle there is a hand-drawn picture of a girl with a red ribbon taking her own life, with the words Happy Thoughts next to her, it seems the potion couldn't help her. ","a tough set of Armor, much better than the old rags you used to wear. ","a pair of spiked Gloves, these really pack a punch. ","a steel Helmet, it fills your with power! "],this.sanityPotionUsage=["","a Sanity Potion, you feel happier. Attached to the bottle there is a hand-drawn picture of a girl with a red ribbon taking her own life, with the words Happy Thoughts next to her, it seems the potion couldn't help her. ","a Sanity Potion, you began to smile again. ","a Sanity Potion, there is a poem attached to the label, the poem is about sunshine and rainclouds. ","a Sanity Potion, you cry tears of happiness. ","a Sanity Potion, i was half full... the stains on the label are tear stains, you hope those were tears of happiness. "],this.itemChoicePresented=["","What do you want to use? a [H]ealth Potion, a [S]anity Potion or the Stra[Y] Soul?","Are you sure you want to use the Rusty Key? It seems like you can just open the next extrance and escape without fighting the enemy. ","Are you sure you want to drink the Sanity Potion? The label says it will bring you back to your senses, but won't have much effect on a sane person. ","Are you sure you want to release the abandoned soul? It looks vengeful. ","Are you sure you want to drink the Health Potion? Are you desperate enough to use it now?"],this.defenseFormEnemy=["","He fell apart. ","A slight breeze would topple him over. ","It doesn't take much to take him down. ","He is quite frail. ","He can't survive a lot. ","His build is pretty average. ","He is pretty durable. ","He has a solid build. ","He is built like a tank. ","Pretty much nothing can even scratch him. ","He is indestructible. "],this.defenseFormPlayer=["","You fell apart. ","A slight breeze would topple you over. ","It doesn't take much to take you down. ","You are quite frail. ","You can't survive a lot. ","Your build is pretty average. ","You are pretty durable. ","You have a solid build. ","You are built like a tank. ","Pretty much nothing can even scratch you. ","You are indestructible. "],this.dexterityFormEnemy=["","He cannot move. ","He can barely move. ","He is slow. ","He lacks aristry. ","He isn't very fast. ","He has mediocre speed. ","His dexterity is above average. ","He is quite nimble. ","Nimble doesn't even begin to describe him. ","He is the definition of finesse. ","He is like the wind. "],this.dexterityFormPlayer=["","You cannot move. ","You can barely move. ","You are slow. ","You lack aristry. ","You aren't very fast. ","You have mediocre speed. ","Your dexterity is above average. ","You are quite nimble. ","Nimble doesn't even begin to describe you. ","You are the definition of finesse. ","You are like the wind. "],this.strengthFormEnemy=["","He has ceased to be. ","He is anemic. ","He is obviously weak. ","He is very skinny. ","He is slightly weak. ","He isn't especially strong. ","He has decent power. ","He has huge muscles. ","He can destroy anyone. ","He has the power of Hercules. ","He has the power of God. "],this.strengthFormPlayer=["","You are dead, GAME OVER. ","You are anemic. ","You are obviously weak. ","You are very skinny. ","You are slightly weak. ","You aren't especially strong. ","You have decent power. ","You have huge muscles. ","You can destroy anyone. ","You have the power of Hercules. ","You have the power of God. "],this.healthFormEnemy=["","He is dead. ","He has trouble keeping his eyes open, he feels himself drifting away into ether. ","His life flashes before his eyes, the death is near. ","He can barely move, he wonders why he even came here. ","He is gravely injured, he suffers from deep wounds. ","He has several broken bones. ","He is injured and limping. ","He has painful cuts on himself. ","He has bruises and scratches. ","He is slightly bruised. ","He doesn't look wounded. "],this.healthFormPlayer=["","You are dead, GAME OVER. ","You have trouble keeping his eyes open, you feel yourself drifting away into ether. ","Your life flashes before your eyes, the death is near. ","You can barely move, you wonder why you even came here. ","You are gravely injured, you suffer from blood loss. ","You are bleeding profusely. ","You are injured and bleeding from your cuts. ","You have painful cuts on yourself. ","You have bruises and scratches. ","You are slightly bruised. ","You don't look wounded. "],this.sanityFormPlayer=["","You have lost the will to live, you are dead inside and desire to be dead outside as well. ","You look at your reflection then burst into tears, you know you'll die here. ","You look like you have given up on life. ","The thousand-yard stare on your face is haunting. ","Your eyes are bloodshot, you are tired of this place. ","You are frowning. ","There is a smile on your face. ","You look confident. ","Despite being in this situation, you look like you are having fun. ","You look excited to go to the next room. ","Even if you die, you know you'll die happy, the journey was the destination for you. "],this.moralityFormPlayer=["","You take a glance at the mirror and quickly look away, but the image is seared into your eyes, it is your tortured soul in hell, you can no longer hold back your true self. ","Your face is dripping with blood, you look down and so are your hands, you can't accept the reality of it, no matter how hard you claw at your own hand the blood does not go away, no matter how hard you rub your eyes it just makes your eyesight more and more red. ","Your face is covered in blood, you look down and see your hands are dripping as well, you don't know why, but you just know it's not your blood, as soon as you blink your hands go back to normal. ","There is no question about it, the red stains on your face are blood, you try to rub your eyes with your hand, but it does not help. ","Your face seems to have red stains on it, but they disappear as soon as you blink. ","There is nothing else out of ordinary about your reflection. ","You take a peak at the mirror and you could've swore you saw a faint halo above your head, for split second, was it a delusion? Regardless, it fuels you with joy. ","The halo above your head is bright, the glow feels your heart with determination. ","The halo is clearly visible, you can even see a pair of wings behind your back. ","You can barely see yourself, the holy glow in the mirror is overwhelming you. ","You take a glance at the mirror and it almost blinds you, but you clearly saw the image of yourself in heaven, you are no longer afraid of death. "]},h=function(){function e(){}return e.prototype.setTheFloor=function(e,t,o){p.enemyIsAlive=!0,p.itemIsOnGround=!0,o.increaseCurrentStage(),p.floor=Math.floor(Math.random()*(H.movingPlace.length-1))+1,p.floor==p.previousFloor&&(p.floor=Math.floor(Math.random()*(H.movingPlace.length-1))+1),p.previousFloor=p.floor,p.enemy=Math.floor(Math.random()*(H.enemyForm.length-1))+1,p.enemy==p.previousEnemy&&(p.enemy=Math.floor(Math.random()*(H.enemyForm.length-1))+1),p.previousEnemy=p.enemy,p.item=Math.floor(Math.random()*(H.itemForm.length-1))+1,p.item==p.previousItem&&(p.item=Math.floor(Math.random()*(H.itemForm.length-1))+1),p.previousItem=p.item,p.move=Math.floor(Math.random()*(H.movingQuotes.length-1))+1,p.move==p.previousMove&&(p.move=Math.floor(Math.random()*(H.movingQuotes.length-1))+1),p.previousMove=p.move,v.enemyHealth=11,v.enemyDefense=Math.floor(Math.random()*o.getCurrentStage()*e)+2,v.enemyDefense>11&&(v.enemyDefense=11),v.enemyStrength=Math.floor(Math.random()*o.getCurrentStage()*e)+2,v.enemyStrength>11&&(v.enemyStrength=11),v.enemyDexterity=Math.floor(Math.random()*o.getCurrentStage()*e)+2,v.enemyDexterity>11&&(v.enemyDexterity=11),v.enemyHealth=Math.floor(3*Math.random())+9,v.enemyHealth>11&&(v.enemyHealth=11)},e}(),m=function(e,t,o,n){document.getElementById("enemy").src="gfx/enemies/"+e+".gif",document.getElementById("item").src="gfx/items/"+t+".png",document.getElementById("floor").src="gfx/floors/"+o+".png",document.getElementById("animation").src="gfx/animations/"+n+".gif"},y=new function(e,t,o,n,r,a,i,l,s,u,h){this.hasMirror=e,this.armorLevel=t,this.helmetLevel=o,this.glovesLevel=n,this.soulAmount=r,this.keyAmount=a,this.weaponLevel=i,this.healthPotionAmount=l,this.sanityPotionAmount=s,this.ringLevel=u,this.shieldLevel=h}(1,0,0,0,10,5,0,10,10,0,0),d=function(e,t,o,n,r,a,i,l,s,u,h){document.getElementById("HealthInventory").innerHTML=0!=i?1==i?"<u>"+i+" Health Potion</u></br> </br>":"<u>"+i+" Health Potions</u></br> </br>":"",document.getElementById("SanityInventory").innerHTML=0!=s?1==s?"<u>"+s+" Sanity Potion</u></br> </br>":"<u>"+s+" Sanity Potions</u></br> </br>":"",document.getElementById("SoulInventory").innerHTML=0!=l?1==l?"<u>"+l+" Stray Soul</u></br> </br>":"<u>"+l+" Stray Souls</u></br> </br>":"",document.getElementById("KeysInventory").innerHTML=0!=r?1==r?"<u>"+y.keyAmount+" Rusty Key</u></br> </br>":"<u>"+y.keyAmount+" Rusty Keys</u></br> </br>":"",0!=t?(b.playerDefense=6+y.armorLevel-b.playerDefenseDebuff,b.playerDefense>11&&(b.playerDefense=11),document.getElementById("ArmorInventory").innerHTML="<u>Tough Armor</u> - +"+y.armorLevel+" defense bonus. </br> </br>"):document.getElementById("ArmorInventory").innerHTML="<u>Cloak</u> - No bonuses. </br> </br>",document.getElementById("ShieldInventory").innerHTML=0!=h?"<u>Solid Shield</u> - "+y.shieldLevel+"0% enemy damage reduction. </br> </br>":"",document.getElementById("GlovesInventory").innerHTML=0!=n?"<u>Spiked Gloves</u> - "+y.glovesLevel+"0% additional damage. </br> </br>":"<u>Leather Gloves</u> - No bonuses. </br> </br>",0!=o?(b.playerStrength=6+y.helmetLevel-b.playerStrengthDebuff,b.playerStrength>11&&(b.playerStrength=11),document.getElementById("HelmetInventory").innerHTML="<u>Steel Helmet</u> - +"+y.helmetLevel+" strength bonus. </br> </br>"):document.getElementById("HelmetInventory").innerHTML="<u>Cloth Hood</u> - No bonuses. </br> </br>",0!=u?(b.playerDexterity=6+y.ringLevel-b.playerDexterityDebuff,b.playerDexterity>11&&(b.playerDexterity=11),document.getElementById("RingInventory").innerHTML="<u>Shiny Ring</u> - +"+y.ringLevel+" dexterity bonus. </br> </br>"):document.getElementById("RingInventory").innerHTML="",document.getElementById("WeaponInventory").innerHTML=0!=a?"<u>Sharp Sword</u> - "+y.weaponLevel+" attack power. </br> </br>":"<u>Fists</u> - 1 attack power.</br> </br>"};new d(y.hasMirror,y.armorLevel,y.helmetLevel,y.glovesLevel,y.keyAmount,y.weaponLevel,y.healthPotionAmount,y.soulAmount,y.sanityPotionAmount,y.ringLevel,y.shieldLevel);var c=function(){function e(){}return e.prototype.checkPrompt=function(e,t,o,n){var r,a;if(r=document.getElementById("written").value,a=document.getElementById("written"),document.getElementById("written").value=null,document.getElementById("written").placeholder="",console.log(r),1==k.allowPrompt&&0==k.waitForAttack)switch(r.charAt(0).toLowerCase()){case"d":v.enemyOnScreen=!1,100==e.getCurrentStage()&&(t.showInfo_isVictory(),k.allowPrompt=!1,k.waitForAttack=!0),1==p.enemyIsAlive&&y.keyAmount<1&&0!=e.getCurrentStage()&&100!=e.getCurrentStage()&&t.showInfo_isBlocked(),1==p.enemyIsAlive&&y.keyAmount>=1&&100!=e.getCurrentStage()&&(y.keyAmount=y.keyAmount-1,n.setTheFloor(1,0,w),new m(0,0,p.floor,0),t.showInfo_isFloorShown()),0==p.enemyIsAlive&&100!=e.getCurrentStage()&&(n.setTheFloor(1,0,w),new m(0,0,p.floor,0),t.showInfo_isFloorShown());break;case"i":1==p.enemyIsAlive&&(0==v.enemyOnScreen&&(new m(p.enemy,0,p.floor,p.animation),t.showInfo_isEnemyShown()),1==v.enemyOnScreen&&t.showInfo_isEnemyShown(),v.enemyOnScreen=!0),0==p.enemyIsAlive&&t.showInfo_isEnemyShown();break;case"r":1==p.itemIsOnGround&&(v.enemyOnScreen=!1,v.rummageOpen=!0,new m(0,p.item,p.floor,p.animation),t.showInfo_isItemShown());break;case"c":t.showInfo_isPlayerStatShown();break;case"m":t.showInfo_isPlayerReflectionShown();break;case"f":o.whichItemToUse("f");break;case"e":if(v.enemyOnScreen=!1,1==p.itemIsOnGround&&1==v.rummageOpen)switch(v.rummageOpen=!1,p.itemIsOnGround=!1,t.showInfo_isItemPickedUp(),new m(0,0,p.floor,0),p.item){case 1:y.weaponLevel<=10&&(y.weaponLevel=Math.round(Math.floor(Math.random()*e.getCurrentStage())/2+2),y.weaponLevel>=10&&(y.weaponLevel=10));break;case 2:y.shieldLevel<=5&&(y.shieldLevel=Math.round(Math.floor(Math.random()*e.getCurrentStage())/2+1),y.shieldLevel>=5&&(y.shieldLevel=5));break;case 3:y.keyAmount=y.keyAmount+1;break;case 4:y.ringLevel<=4&&(y.ringLevel=Math.round(Math.floor(Math.random()*e.getCurrentStage())/2+1),y.ringLevel>=4&&(y.ringLevel=4));break;case 5:y.healthPotionAmount=y.healthPotionAmount+1;break;case 6:y.soulAmount=y.soulAmount+1;break;case 7:y.sanityPotionAmount=y.sanityPotionAmount+1;break;case 8:y.armorLevel<=4&&(y.armorLevel=Math.round(Math.floor(Math.random()*e.getCurrentStage())/2+1),y.armorLevel>=4&&(y.armorLevel=4));break;case 9:y.glovesLevel<=5&&(y.glovesLevel=Math.round(Math.floor(Math.random()*e.getCurrentStage())/2+1),y.glovesLevel>=5&&(y.glovesLevel=5));break;case 10:y.helmetLevel<=4&&(y.helmetLevel=Math.round(Math.floor(Math.random()*e.getCurrentStage())/2+1))}break;case"p":v.potionBackOpen=!0,t.showInfo_readyForPotionUsage();break;case"s":1==v.potionBackOpen&&(v.itemToUse=7,o.whichItemToUse("s"),v.potionBackOpen=!1);break;case"y":1==v.potionBackOpen&&(v.itemToUse=6,o.whichItemToUse("y"),v.potionBackOpen=!1);break;case"h":1==v.potionBackOpen&&(v.itemToUse=5,o.whichItemToUse("h"),v.potionBackOpen=!1)}return new d(y.hasMirror,y.armorLevel,y.helmetLevel,y.glovesLevel,y.keyAmount,y.weaponLevel,y.healthPotionAmount,y.soulAmount,y.sanityPotionAmount,y.ringLevel,y.shieldLevel),v.enemyHealth<2&&(v.enemyHealth=1,p.enemyIsAlive=!1),a.focus(),r},e}(),f=function(){function e(){k.allowPrompt=!1;for(var e=function(e){setTimeout((function(){document.getElementById("info").innerHTML+=""[e]}),e*k.textSpeed)},t=0;t<"".length;t++)e(t);setTimeout((function(){k.allowPrompt=!0,console.log("promptAllowed"),b.playerHealth<2&&(k.allowPrompt=!1,document.getElementById("info").innerHTML=H.actions[20])}),"".length*k.textSpeed)}return e.prototype.showInfo_allowPromptAgain=function(){k.allowPrompt=!0,console.log("promptAllowed"),b.playerHealth<2&&(k.allowPrompt=!1,document.getElementById("info").innerHTML=H.actions[20])},e.prototype.showInfo_isFloorShown=function(){var e=this;document.getElementById("info").innerHTML=null;for(var t=H.movingQuotes[p.move]+H.movingPlace[p.floor]+H.actions[1]+H.enemyForm[p.enemy]+H.actions[10]+H.itemForm[p.item],o=function(e){setTimeout((function(){document.getElementById("info").innerHTML+=t[e]}),e*k.textSpeed)},n=0;n<t.length;n++)o(n);k.allowPrompt=!1,console.log("no prompt"),setTimeout((function(){e.showInfo_allowPromptAgain()}),t.length*k.textSpeed)},e.prototype.showInfo_isPlayerReflectionShown=function(){var e=this;document.getElementById("info").innerHTML=null;for(var t=H.actions[13]+H.sanityFormPlayer[b.playerSanity],o=function(e){setTimeout((function(){document.getElementById("info").innerHTML+=t[e]}),e*k.textSpeed)},n=0;n<t.length;n++)o(n);setTimeout((function(){e.showInfo_allowPromptAgain()}),t.length*k.textSpeed)},e.prototype.showInfo_isPlayerStatShown=function(){var e=this;document.getElementById("info").innerHTML=null;for(var t=H.defenseFormPlayer[b.playerDefense]+H.strengthFormPlayer[b.playerStrength]+H.dexterityFormPlayer[b.playerDexterity]+H.healthFormPlayer[b.playerHealth],o=function(e){setTimeout((function(){document.getElementById("info").innerHTML+=t[e]}),e*k.textSpeed)},n=0;n<t.length;n++)o(n);setTimeout((function(){e.showInfo_allowPromptAgain()}),t.length*k.textSpeed)},e.prototype.showInfo_isItemShown=function(){var e=this;document.getElementById("info").innerHTML=null;for(var t=H.actions[12]+H.itemForm[p.item],o=function(e){setTimeout((function(){document.getElementById("info").innerHTML+=t[e]}),e*k.textSpeed)},n=0;n<t.length;n++)o(n);setTimeout((function(){e.showInfo_allowPromptAgain()}),t.length*k.textSpeed)},e.prototype.showInfo_isEnemyShown=function(){var e=this;document.getElementById("info").innerHTML=null;for(var t=H.actions[11]+H.enemyForm[p.enemy]+H.defenseFormEnemy[v.enemyDefense]+H.strengthFormEnemy[v.enemyStrength]+H.dexterityFormEnemy[v.enemyDexterity]+H.healthFormEnemy[v.enemyHealth],o=function(e){setTimeout((function(){document.getElementById("info").innerHTML+=t[e]}),e*k.textSpeed)},n=0;n<t.length;n++)o(n);setTimeout((function(){e.showInfo_allowPromptAgain()}),t.length*k.textSpeed)},e.prototype.showInfo_isItemUsed=function(){var e=this;document.getElementById("info").innerHTML=null;for(var t=H.actions[14]+H.itemUsage[v.itemToUse],o=function(e){setTimeout((function(){document.getElementById("info").innerHTML+=t[e]}),e*k.textSpeed)},n=0;n<t.length;n++)o(n);setTimeout((function(){e.showInfo_allowPromptAgain()}),t.length*k.textSpeed)},e.prototype.showInfo_isItemUnavailable=function(){var e=this;document.getElementById("info").innerHTML=null;for(var t=H.actions[16]+H.itemForm[v.itemToUse],o=function(e){setTimeout((function(){document.getElementById("info").innerHTML+=t[e]}),e*k.textSpeed)},n=0;n<t.length;n++)o(n);setTimeout((function(){e.showInfo_allowPromptAgain()}),t.length*k.textSpeed)},e.prototype.showInfo_readyForPotionUsage=function(){var e=this;document.getElementById("info").innerHTML=null;for(var t=H.itemChoicePresented[1],o=function(e){setTimeout((function(){document.getElementById("info").innerHTML+=t[e]}),e*k.textSpeed)},n=0;n<t.length;n++)o(n);setTimeout((function(){e.showInfo_allowPromptAgain()}),t.length*k.textSpeed)},e.prototype.showInfo_isItemPickedUp=function(){var e=this;document.getElementById("info").innerHTML=null;for(var t=H.actions[7]+H.itemForm[p.item],o=function(e){setTimeout((function(){document.getElementById("info").innerHTML+=t[e]}),e*k.textSpeed)},n=0;n<t.length;n++)o(n);setTimeout((function(){e.showInfo_allowPromptAgain()}),t.length*k.textSpeed)},e.prototype.showInfo_isBlocked=function(){var e=this;document.getElementById("info").innerHTML=null;for(var t=H.actions[17],o=function(e){setTimeout((function(){document.getElementById("info").innerHTML+=t[e]}),e*k.textSpeed)},n=0;n<t.length;n++)o(n);setTimeout((function(){e.showInfo_allowPromptAgain()}),t.length*k.textSpeed)},e.prototype.showInfo_isSwordUsed=function(){var e=this;document.getElementById("info").innerHTML=null;for(var t=H.actions[18]+H.enemyForm[p.enemy]+H.healthFormEnemy[v.enemyHealth],o=function(e){setTimeout((function(){document.getElementById("info").innerHTML+=t[e]}),e*k.textSpeed)},n=0;n<t.length;n++)o(n);setTimeout((function(){e.showInfo_allowPromptAgain()}),t.length*k.textSpeed)},e.prototype.showInfo_isEnemyAttacking=function(){var e=this;document.getElementById("info").innerHTML=null;for(var t=H.actions[19]+H.healthFormPlayer[b.playerHealth],o=function(e){setTimeout((function(){document.getElementById("info").innerHTML+=t[e]}),e*k.textSpeed)},n=0;n<t.length;n++)o(n);setTimeout((function(){e.showInfo_allowPromptAgain()}),t.length*k.textSpeed)},e.prototype.showInfo_isPlayerDead=function(){var e=this;document.getElementById("info").innerHTML=null;for(var t=H.actions[20],o=function(e){setTimeout((function(){document.getElementById("info").innerHTML+=t[e]}),e*k.textSpeed)},n=0;n<t.length;n++)o(n);setTimeout((function(){e.showInfo_allowPromptAgain()}),t.length*k.textSpeed)},e.prototype.showInfo_isVictory=function(){var e=this;document.getElementById("info").innerHTML=null;for(var t=H.actions[21],o=function(e){setTimeout((function(){document.getElementById("info").innerHTML+=t[e]}),e*k.textSpeed)},n=0;n<t.length;n++)o(n);setTimeout((function(){e.showInfo_allowPromptAgain()}),t.length*k.textSpeed)},e}(),g=function(){function e(){}return e.prototype.whichItemToUse=function(e){switch(e){case"h":y.healthPotionAmount>=1?(v.enemyOnScreen=!1,new m(0,0,p.floor,5),M.showInfo_isItemUsed(),b.playerHealth=11,y.healthPotionAmount=y.healthPotionAmount-1):M.showInfo_isItemUnavailable();break;case"f":v.enemyOnScreen=!0,new m(p.enemy+10,0,p.floor,1),v.enemyHealth>=1&&(I.attackStrength=Math.round(y.weaponLevel+b.playerStrength-v.enemyDefense-v.enemyDexterity+.5*y.glovesLevel),I.attackStrength<1&&(I.attackStrength=1),console.log("Your power"+I.attackStrength),v.enemyHealth=v.enemyHealth-I.attackStrength,v.enemyHealth<2&&(v.enemyHealth=1)),M.showInfo_isSwordUsed(),k.waitForAttack=!0,setTimeout((function(){0==p.enemyIsAlive&&(k.waitForAttack=!1),1==p.enemyIsAlive&&(I.enemyAttackStrength=Math.round(v.enemyStrength-b.playerDefense/5-b.playerDexterity/5-.5*y.shieldLevel),console.log("Enemy power"+I.enemyAttackStrength),I.enemyAttackStrength<0&&(I.enemyAttackStrength=0),b.playerHealth=b.playerHealth-I.enemyAttackStrength,b.playerHealth<2&&(b.playerSanity>1?(b.playerHealth=3,b.playerSanity=b.playerSanity-1,console.log("Sanity Hit: Taken, current Sanity:"+b.playerSanity)):b.playerHealth=1),new m(p.enemy+10,0,p.floor,2),M.showInfo_isEnemyAttacking(),k.waitForAttack=!1)}),2e3);break;case"s":y.sanityPotionAmount>=1?(v.enemyOnScreen=!1,new m(0,0,p.floor,5),M.showInfo_isItemUsed(),b.playerSanity<6&&(b.playerSanity=6),b.playerSanity>=6&&(b.playerSanity=b.playerSanity+1),y.sanityPotionAmount=y.sanityPotionAmount-1):M.showInfo_isItemUnavailable();break;case"y":y.soulAmount>=1?(v.enemyOnScreen=!0,new m(p.enemy+10,0,p.floor,6),M.showInfo_isItemUsed(),v.enemyHealth>=1&&(v.enemyHealth=v.enemyHealth-5,v.enemyHealth<2&&(v.enemyHealth=1)),y.soulAmount=y.soulAmount-1):M.showInfo_isItemUnavailable()}},e}(),p=new s(0,null,0,null,0,null,0,null,!1,!1,0),w=new n(1),v=new l(1,1,1,1,!1,0,!1,!1),b=new r(11,6,6,6,0,0,0,6,6),k=new a(!0,!1,10),S=new c,I=new i(0,0),H=new u,M=new f,T=new g,Y=new h;window.onload=function(){var e=document.getElementById("ambient");window.onmousedown=function(t){e.play()};var t=document.getElementById("proceed");null==t||t.addEventListener("click",(function(){S.checkPrompt(w,M,T,Y)})),window.onkeydown=function(e){13==e.keyCode&&S.checkPrompt(w,M,T,Y)}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,